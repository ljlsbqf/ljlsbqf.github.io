(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{348:function(s,e,n){"use strict";n.r(e);var a=n(6),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"redis官方文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis官方文档"}},[s._v("#")]),s._v(" redis官方文档")]),s._v(" "),e("p",[s._v("https://redis.io/docs/\n中文官网：redis.cn\n狂神说笔记：https://blog.csdn.net/DDDDeng_/article/details/108118544")]),s._v(" "),e("ol",[e("li",[s._v("redis 持久化：rdb aof 概念")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("rdb：内存快照\naof：将写操作记录下来，通过执行这些命令恢复数据\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("redis-benchmarks 进行性能测试")]),s._v(" "),e("li",[s._v("redis单线程：基于内存操作，cpu不是redis的瓶颈，瓶颈在于内存和网络带宽")]),s._v(" "),e("li",[s._v("redis快速的原因：")]),s._v(" "),e("li",[s._v("redis数据类型：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("String：最基本的数据类型，string 类型的值最大能存储 512MB\n\nlist：按照插入顺序排序。可以添加一个元素到列表的头部（左边）或者尾部（右边）\n\nset： 是string 类型的无序集合，集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)\n\nzset：zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\nzset的成员是唯一的,但分数(score)却可以重复。\n\nhash：是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("ol",{attrs:{start:"6"}},[e("li",[s._v("redis事务")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("redis事务没有隔离机制的概念：所有命令在事务中，并没有直接被执行，只有发起执行命令的时候才会被执行：exec\n\n开启事务multi\n----各种命令\n执行事务exec\n\n取消事务：discard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ol",{attrs:{start:"7"}},[e("li",[e("p",[s._v("redis实现乐观锁：使用watch进行监控\n加锁 unwatch\n解锁 watch")])]),s._v(" "),e("li",[e("p",[s._v("springboot2.x后将 jedis替换成letture")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("jedis：采用直连，多线程操作不安全，如果要避免不安全，要用jedis pool 连接池！像BIO模式\nletture:采用netty,多实例可以在多个线程中进行共享，不存在线程不安全的情况，可以减少线程数量，更像NIO模式\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"9"}},[e("li",[s._v("主从复制：最低配1主2从，主节点写，从节点复制")])])])}),[],!1,null,null,null);e.default=t.exports}}]);