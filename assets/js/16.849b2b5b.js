(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{518:function(n,s,e){"use strict";e.r(s);var a=e(31),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[n._v("#")]),n._v(" 说明")]),n._v(" "),e("blockquote",[e("p",[n._v("接口CompletionService可以一边产生新的异步任务，一边处理已完成任务的返回值。这样可以让任务执行和任务返回分开处理。使用submit提交任务，使用take获取已经执行完成的任务，并按照任务执行完成的时间处理返回值。\n可以避免FutureTask类阻塞的问题，可更加有效地处理Future的返回值，也就是哪个任务先执行完，CompletionService就先获取哪个任务的返回值优先处理。")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class MyCallable implements Callable<String> {\n\n    private String name;\n\n    public MyCallable(String name){\n        this.name = name;\n    }\n\n    public Long getSleep(){\n        Random r = new Random();\n        int max=3000;\n        int min=10;\n        return Long.valueOf(r.nextInt(max)%(max-min+1) + min);\n    }\n    @Override\n    public String call() throws Exception {\n        TimeUnit.MILLISECONDS.sleep(getSleep());\n        return Thread.currentThread().getName()+"---return:"+name;\n    }\n}\n\npublic class CompletionServiceTest {\n\n    public static void main(String[] args) {\n\n        //1、默认创建线程数:corePoolSize；最大创建线程数:maximumPoolSize\n        //2、待执行任务submit()后，将存入队列等待执行\n        //3、当待执行任务数超过队列大小,无法存入，则会根据maximumPoolSize参数继续创建新的线程，至只线程池中存活线程达到最大值：maximumPoolSize\n        //4、当前配置的是有界队列，当队列达到最大值，将抛出异常：java.util.concurrent.RejectedExecutionException\n        LinkedBlockingDeque queue = new LinkedBlockingDeque<>(5);\n        ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(3,10,5, TimeUnit.SECONDS,queue);\n        CompletionService completionService = new ExecutorCompletionService(threadPoolExecutor);\n\n        List<Callable> callableList = new ArrayList<Callable>();\n        int size =10;\n        for(int i=0;i<size;i++){\n            MyCallable myCallable = new MyCallable("call"+i);\n            callableList.add(myCallable);\n            System.out.println("添加任务"+"call"+i);\n            completionService.submit(myCallable);\n        }\n\n        for(int i=0;i<size;i++){\n            try {\n                System.out.println("获取执行结果："+completionService.take().get());\n            } catch (InterruptedException e) {\n                throw new RuntimeException(e);\n            } catch (ExecutionException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        threadPoolExecutor.shutdown();\n\n    }\n}\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);